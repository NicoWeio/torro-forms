/*!
 * Torro Forms Version 1.0.4 (https://torro-forms.com)
 * Licensed under GNU General Public License v2 (or later) (http://www.gnu.org/licenses/gpl-2.0.html)
 */
!function(e,t,a,n){"use strict";function i(e){"true"===e.attr("aria-expanded")?e.attr("aria-expanded","false"):(e.attr("aria-expanded","true"),e.next(".template-tag-list").focus(),a("html").one("click",function(){e.attr("aria-expanded","false").focus()}))}function l(e,t){var a=n.templateTagSlug.replace("%element_id%",e.get("id")),i=n.templateTagGroup,l=t.find(".template-tag-"+a);l&&(l.remove(),t.find(".template-tag-list-group-"+i+" > ul > li").length||t.find(".template-tag-list-group-"+i).remove())}function o(e,t){var i=t.attr("id").replace("-template-tag-list",""),l={slug:n.templateTagSlug.replace("%element_id%",e.get("id")),group:n.templateTagGroup,label:n.templateTagLabel.replace("%element_label%",e.get("label")),description:n.templateTagDescription.replace("%element_label%",e.get("label"))},o={slug:n.templateTagGroup,label:n.templateTagGroupLabel},r=a(n.templateTagTemplate.replace(/%slug%/g,l.slug).replace(/%group%/g,l.group).replace(/%label%/g,l.label).replace(/%description%/g,l.description).replace(/%target_id%/g,i)),c=t.find(".template-tag-list-group-"+l.group+" > ul");c.length||(c=a(n.templateTagGroupTemplate.replace(/%slug%/g,o.slug).replace(/%label%/g,o.label)),t.append(c),c=c.children("ul")),c.append(r),e.on("change:label",function(e,t){var a=n.templateTagLabel.replace("%element_label%",t);r.html(r.html().replace(l.label,a)),l.label=a})}function r(t,a,n){return a&&a.length?d[t]&&d[t][a]?void n(d[t][a]):void e.api.init().done(function(){new e.api.models.ApiActionConnection({action:t,connection:a}).fetch({data:{context:"view"},context:this,success:function(e){d[t]||(d[t]={}),d[t][a]=e.attributes,n(e.attributes)},error:function(){console.error(u.couldNotLoadData)}})}).fail(function(){console.error(u.couldNotLoadData)}):void n(void 0)}function c(e,t,a){var n;if(!e||!t||!t.length)return void a(void 0);for(n=0;n<e.routes.length;n++)if(e.routes[n].slug===t)return void a(e.routes[n]);a(void 0)}function p(e){var n=a(".plugin-lib-repeatable-group-"+e+"__integrations-wrap");n.length&&a(document).ready(function(){function n(t,n,i){var o=n.name.match(/\[(\d+)\]$/),c=l.get("items");o&&c&&(o=parseInt(o[1],10),c[o]&&r(e,i.connection,function(e){var t={},n=[],l=a("#"+c[o].fields.route.id),r=l;if(t[""]=u.selectARoute,n.push({id:"",text:u.selectARoute}),e&&e.routes.forEach(function(e){t[e.slug]=e.title,n.push({id:e.slug,text:e.title})}),c[o].fields.route.choices=t,l.empty().select2({data:n}),i.route){if(!t[i.route])return void l.val("").trigger("change");i.route!==r&&l.val(i.route).trigger("change")}}))}function i(n,i,l){r(e,l.connection,function(e){c(e,l.route,function(e){var n,l,r={},c=!1,p=a("#"+i.fields.mappings.wrapAttrs.id);e&&(e.fields.forEach(function(e){e.readonly||"array"!==e.type&&(r[e.slug]=e)}),r&&(c=!0)),i.fields.mappings.params=r,i.fields.mappings.display=c,p.data("torroView")&&f[p.data("torroView")]?(l=f[p.data("torroView")],n=l.model):(n=new t.Field(i.fields.mappings),l=new t.FieldView.FieldmappingsFieldView({model:n}),f[l.cid]=l,p.data("torroView",l.cid)),l.applyParams(n,r),l.applyDisplay(n,c),p.find(".field-mappings-template-tag-list").each(function(){var e,t=Object.keys(h);for(e=0;e<t.length;e++)o(h[t[e]],a(this))})})})}var l=t.FieldManager.instances[s].get(s+"_"+e.replace("_","-")+"--integrations");l.on("changeItemValue:connection",function(e,t,a){n(e,t,a)}),l.on("changeItemValue:route",function(e,t,a){i(e,t,a)}),l.get("items").forEach(function(e){var t=a("#"+e.fields.connection.id),i=t.val();i&&i.length&&(t.trigger("change"),n(l,e,e.currentValue))})})}var g=n.actions,u=n.i18n,d={},s=a("#torro_module_actions-field-manager-instance"),f={},m=e.Builder.getInstance(),h={};t.FieldView.FieldmappingsFieldView=t.FieldView.extend({getEvents:function(){return{}},applyParams:function(){this.renderContent()},preRender:function(e){e.find(".template-tag-list-toggle").off("click"),e.find(".template-tag-button").off("click")},postRender:function(e){var t=e.find(".template-tag-list-toggle");t.length&&(t.on("click",function(e){var t=a(this);i(t),e.stopPropagation(),e.preventDefault()}),e.on("click",".template-tag-button",function(){var e="{"+a(this).data("tag")+"}",t=a("#"+a(this).data("targetId"));t.val(t.val()+e)}))}}),g.length&&s.length&&(m.on("addElement",function(e){h[e.get("id")]=e,a(".field-mappings-template-tag-list").each(function(){o(e,a(this))})}),m.on("removeElement",function(e){h[e.get("id")]&&delete h[e.get("id")],a(".field-mappings-template-tag-list").each(function(){l(e,a(this))})}),s=s.val(),g.forEach(p))}(window.torro,window.pluginLibFieldsAPI,window.jQuery,window.torroAPIActionsData||{});