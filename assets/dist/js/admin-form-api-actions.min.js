/*!
 * Torro Forms Version 1.0.3 (https://torro-forms.com)
 * Licensed under GNU General Public License v2 (or later) (http://www.gnu.org/licenses/gpl-2.0.html)
 */
!function(t,n,o,e){"use strict";function i(n,o,e){return o&&o.length?l[n]&&l[n][o]?void e(l[n][o]):void t.api.init().done(function(){new t.api.models.ApiActionConnection({action:n,connection:o}).fetch({data:{context:"view"},context:this,success:function(t){l[n]||(l[n]={}),l[n][o]=t.attributes,e(t.attributes)},error:function(){console.error(u.couldNotLoadData)}})}).fail(function(){console.error(u.couldNotLoadData)}):void e(void 0)}function c(t,n,o){var e;if(!t||!n||!n.length)return void o(void 0);for(e=0;e<t.routes.length;e++)if(t.routes[e].slug===n)return void o(t.routes[e]);o(void 0)}function r(t){var e=o(".plugin-lib-repeatable-group-"+t+"__integrations-wrap");e.length&&o(document).ready(function(){var e=n.FieldManager.instances[s].get(s+"_"+t.replace("_","-")+"--integrations");e.on("changeItemValue:connection",function(n,c,r){var a=c.name.match(/\[(\d+)\]$/),l=e.get("items");a&&l&&(a=parseInt(a[1],10),l[a]&&i(t,r.connection,function(t){var n={},e=[],i=o("#"+l[a].fields.route.id),c=i.val();n[""]=u.selectARoute,e.push({id:"",text:u.selectARoute}),t&&t.routes.forEach(function(t){n[t.slug]=t.title,e.push({id:t.slug,text:t.title})}),l[a].fields.route.choices=n,i.empty().select2({data:e}),c&&!n[c]&&i.val("").trigger("change")}))}),e.on("changeItemValue:route",function(n,o,e){i(t,e.connection,function(t){c(t,e.route,function(t){console.log(t)})})})})}var a=e.actions,u=e.i18n,l={},s=o("#torro_module_actions-field-manager-instance");a.length&&s.length&&(s=s.val(),a.forEach(r))}(window.torro,window.pluginLibFieldsAPI,window.jQuery,window.torroAPIActionsData);